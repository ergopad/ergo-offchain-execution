version: '3'

services:

  eo-api:
    container_name: eo-api
    env_file: .env
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./ergo_offchain_api/Dockerfile
    ports: 
      - ${API_PORT}:${API_PORT}
    volumes: 
     - ./:/app
    networks:
      - net
    command: bash -c "alembic upgrade head && uvicorn ergo_offchain_api.main:app --reload --workers 4 --reload-dir /app/ergo_offchain_api --reload-dir /app/utils --host 0.0.0.0 --port ${API_PORT} --proxy-headers --use-colors"
    depends_on:
      - eo-redis
      - eo-postgres

  tx_submitter:
    container_name: tx_submitter
    env_file: .env
    restart: unless-stopped
    networks:
      - net
    build:
      context: .
      dockerfile: ./tx_submitter/Dockerfile
    volumes:
      - ./:/code
    entrypoint: watchmedo auto-restart --recursive --pattern="*.py" --directory="./tx_submitter" --directory="./utils" -- python -m tx_submitter
    depends_on:
      - eo-kafka
      - eo-api

  utxo_grabber:
    container_name: utxo_grabber
    env_file: .env
    restart: unless-stopped
    networks:
      - net
    build:
      context: .
      dockerfile: ./utxo_grabber/Dockerfile
    volumes:
      - ./:/code
    entrypoint: watchmedo auto-restart --recursive --pattern="*.py" --directory="./utxo_grabber" --directory="./utils" -- python -m utxo_grabber
    depends_on:
      - eo-kafka
      - eo-api

  filter_validator:
    container_name: filter_validator
    env_file: .env
    restart: unless-stopped
    networks:
      - net
    build:
      context: .
      dockerfile: ./filter_validator/Dockerfile
    volumes:
      - ./:/code
    entrypoint: watchmedo auto-restart --recursive --pattern="*.py" --directory="./filter_validator" --directory="./utils" -- python -m filter_validator
    depends_on:
      - eo-kafka
      - eo-api

  eo-zookeeper:
    container_name: eo-zookeeper
    restart: unless-stopped
    networks: 
      - net
    image: 'bitnami/zookeeper:latest'
    ports:
      - '2182:2182'
    environment:
      - ZOO_PORT_NUMBER=2182
      - ALLOW_ANONYMOUS_LOGIN=yes

  eo-kafka:
    container_name: eo-kafka
    restart: unless-stopped
    networks: 
      - net
    image: 'bitnami/kafka:latest'
    ports:
      - '0.0.0.0:9099:9099'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9099
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://eo-kafka:9099
      - KAFKA_CFG_ZOOKEEPER_CONNECT=eo-zookeeper:2182
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - eo-zookeeper

  eo-redis:
    container_name: eo-redis
    env_file: .env
    image: redis
    restart: unless-stopped
    volumes: 
      - eo-redis_vol:/data # redis persistence
    ports: 
      - ${REDIS_PORT}:${REDIS_PORT}
    networks:
      - net
    entrypoint: redis-server --appendonly yes --port ${REDIS_PORT}

  eo-postgres:
    container_name: eo-postgres
    hostname: postgres
    env_file: .env
    image: postgres:14
    shm_size: 512m
    restart: unless-stopped
    volumes: 
      - eo-postgres_vol:/var/lib/postgresql/data:cached
    networks:
      - net

volumes:
  eo-postgres_vol:
  eo-redis_vol:

networks:
  net:
    driver: bridge